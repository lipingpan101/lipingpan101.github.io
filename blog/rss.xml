<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Liping Pan Blog</title>
        <link>https://lipingpan101.github.io/blog</link>
        <description>Liping Pan Blog</description>
        <lastBuildDate>Thu, 02 Mar 2023 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Front End Build Tools]]></title>
            <link>https://lipingpan101.github.io/blog/2023/03/02/build-tool</link>
            <guid>https://lipingpan101.github.io/blog/2023/03/02/build-tool</guid>
            <pubDate>Thu, 02 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[In modern web development, it is common to have multiple JavaScript and CSS files that are organized and modularized for easier development. However, having multiple files can slow down the loading time of a website since each file requires an HTTP request to the server. To solve this issue, developers use front end build tools to create a "build," a production-ready version of the application that combines and compresses all the necessary files into one, resulting in faster loading times.]]></description>
            <content:encoded><![CDATA[<p>In modern web development, it is common to have multiple JavaScript and CSS files that are organized and modularized for easier development. However, having multiple files can slow down the loading time of a website since each file requires an HTTP request to the server. To solve this issue, developers use front end build tools to create a "build," a production-ready version of the application that combines and compresses all the necessary files into one, resulting in faster loading times.</p><p>Front end build tools come in various types and can be confusing to navigate for developers. Some examples of front end build tools include Node, NPM, Webpack, Rollup, Parcel, Vite, Prettier, and ESLint. In this blog, we will discuss what front end build tools are, what they do, and how they work together.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-build">What is Build?<a href="#what-is-build" class="hash-link" aria-label="Direct link to What is Build?" title="Direct link to What is Build?">​</a></h3><p>Before delving into front end build tools, it is important to understand what a "build" is. In software development, a build is the process of converting source code files into standalone software artifact(s) that can be run on a computer. In web development, this process involves merging and compressing multiple JavaScript and CSS files into one, as well as converting Sass or other preprocessing languages into CSS.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-do-front-end-build-tools-do">What Do Front End Build Tools Do?<a href="#what-do-front-end-build-tools-do" class="hash-link" aria-label="Direct link to What Do Front End Build Tools Do?" title="Direct link to What Do Front End Build Tools Do?">​</a></h3><p>Front end build tools are essential for automating the process of creating a build. The two main functions of these tools are to install dependencies and to execute tasks such as compiling, packaging, compressing, and checking code style. Depending on the tool, it may be geared towards installation or execution.</p><p>Tools like npm and Yarn are primarily installation tools and can install any front-end library or even other build tools. In contrast, tools like Parcel, Webpack, and Vite are primarily execution tools and are designed to automate tedious and error-prone tasks in web development.</p><p>Node and npm are the grandfathers of front end build tools and are used to install and run most other build tools. Node is a tool for running JavaScript files and servers, while npm is a tool for installing and managing front-end libraries and build tools.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-do-front-end-build-tools-work-together">How Do Front End Build Tools Work Together?<a href="#how-do-front-end-build-tools-work-together" class="hash-link" aria-label="Direct link to How Do Front End Build Tools Work Together?" title="Direct link to How Do Front End Build Tools Work Together?">​</a></h3><p>There is no one correct combination of front end build tools, and developers may even choose to forego using any tools altogether. However, the manual process of copying and pasting code is tedious and time-consuming, making it impractical for most web development projects.</p><p>A common combination of front end build tools includes using npm or Yarn to install front-end libraries and build tools, using Webpack or Parcel to bundle and compress files, using ESLint or Prettier for code style checking and formatting, and using Jest or Cypress for testing.</p><p>In conclusion, front end build tools are essential for automating the process of creating a production-ready version of a web application. These tools come in various types, and each has its unique features and strengths. Understanding how front end build tools work together can significantly improve a developer's workflow and productivity.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Front-End Routing & Server-Side Routing]]></title>
            <link>https://lipingpan101.github.io/blog/2023/03/02/router</link>
            <guid>https://lipingpan101.github.io/blog/2023/03/02/router</guid>
            <pubDate>Thu, 02 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[There are two main types of routing: front-end routing and server-side routing. Front-end routing is handled entirely by the client-side code in the browser, while server-side routing is handled by the server that hosts the website.]]></description>
            <content:encoded><![CDATA[<p>There are two main types of routing: front-end routing and server-side routing. Front-end routing is handled entirely by the client-side code in the browser, while server-side routing is handled by the server that hosts the website.</p><p>Front-end routing is typically used in single-page applications (SPAs), where the entire website is loaded once and subsequent page views are handled by JavaScript code running in the browser. This type of routing is implemented using client-side routing libraries like React Router, and it allows for a seamless user experience with fast page transitions and minimal page refreshes. However, since the routing is entirely handled by JavaScript, it's not SEO(Search Engine Optimization)-friendly and can be less performant for initial page loads.</p><p>On the other hand, server-side routing is used in traditional multi-page applications, where each page is loaded separately from the server. This type of routing is handled by the server-side code, typically using a web framework like Express or Ruby on Rails. Since the server handles the routing, the website can be SEO-friendly and performant for initial page loads. However, subsequent page transitions can be slower due to the need to reload the entire page from the server.</p><p>In some cases, a hybrid approach is used, called server-side rendering (SSR). In this approach, the server renders the initial HTML content of the website and sends it to the client, which then takes over for subsequent page transitions using client-side routing. This approach provides the best of both worlds, allowing for SEO-friendly initial page loads and seamless client-side routing for subsequent page transitions.</p><p>Overall, choosing the right type of routing depends on the specific requirements of your website or application. React Router and the Router Hook API provide powerful tools for implementing front-end routing in your React applications, while server-side routing and SSR can be useful for more traditional multi-page applications.</p><h5 class="anchor anchorWithStickyNavbar_LWe7" id="notes">Notes:<a href="#notes" class="hash-link" aria-label="Direct link to Notes:" title="Direct link to Notes:">​</a></h5><ol><li><p>SPA (Single Page Application, 单页面应用)</p></li><li><p>SEO (Search Engine Optimization, 搜索引擎优化)</p></li><li><p>SSR (Server Side Rendering, 服务端渲染)</p></li><li><p>CSR(Client Side Rendering, 客户端渲染)</p></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[React Router]]></title>
            <link>https://lipingpan101.github.io/blog/2023/03/01/react-router</link>
            <guid>https://lipingpan101.github.io/blog/2023/03/01/react-router</guid>
            <pubDate>Wed, 01 Mar 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[React Router is a powerful library that allows you to implement front-end routing in your React applications. It offers a wide range of components and features that make it easy to create single-page applications with multiple routes and views. One of the most useful features of React Router is the Router Hook API, which allows you to interact with the routing system programmatically.]]></description>
            <content:encoded><![CDATA[<p>React Router is a powerful library that allows you to implement front-end routing in your React applications. It offers a wide range of components and features that make it easy to create single-page applications with multiple routes and views. One of the most useful features of React Router is the Router Hook API, which allows you to interact with the routing system programmatically.</p><p>The Router Hook API provides a set of hooks that allow you to access the current location, navigate to different routes, and listen for changes to the route. Let's take a look at some of the most useful hooks in the Router Hook API:</p><ol><li><code>useHistory()</code>: This hook returns the history object, which you can use to navigate to different routes programmatically. For example, you can use history.push('/my-route') to navigate to the 'my-route' route.</li><li><code>useLocation()</code>: This hook returns the current location object, which contains information about the current URL. You can use this hook to get the current pathname, search, and hash values.</li><li><code>useParams()</code>: This hook returns an object containing the dynamic parameters in the current URL. For example, if you have a route defined as '/users/:userId', you can use useParams() to get the value of ':userId' in the current URL.</li><li><code>useRouteMatch()</code>: This hook returns an object containing information about the current route match. You can use this hook to get the current path, URL, and params for the matched route.</li></ol><p>Using these hooks, you can create custom navigation components, implement authentication and authorization logic, and handle complex routing scenarios. For example, you can use the Router Hook API to redirect users to a login page if they try to access a protected route without authentication.</p><p>In addition to the Router Hook API, React Router also provides a wide range of components for implementing routing in your application. The most commonly used components include:</p><ol><li><code>&lt;Router&gt;</code>: This component is the top-level component for the routing system. It provides the context and history objects that are used by other routing components.</li><li><code>&lt;Route&gt;</code>: This component is used to define a route in your application. You can specify the path, component, and other options for the route.</li><li><code>&lt;Link&gt;</code>: This component is used to create links between routes in your application. It provides a declarative way to navigate between routes.</li></ol><p>Overall, React Router is an essential library for any React developer who wants to implement front-end routing in their applications. With the Router Hook API and other components, you can create powerful routing systems that are flexible and easy to use.</p><hr><h3 class="anchor anchorWithStickyNavbar_LWe7" id="questions">Questions:<a href="#questions" class="hash-link" aria-label="Direct link to Questions:" title="Direct link to Questions:">​</a></h3><p>Q1. How to implement front-end routing in React without using React Router?</p><p>Answer: </p><ol><li>Listen for URL changes and retrieve the current URL, which can be done using the browser's provided API: window.location.</li><li>Match the corresponding page or component based on the current URL.</li><li>Render the matched page or component.</li></ol><p>Q2. What components need to be defined to implement React Router?
Answer:</p><ol><li>Router: The router component is the top-level component that holds the entire routing configuration. There are two types of routers you can use: <code>&lt;BrowserRouter&gt;</code> and <code>&lt;HashRouter&gt;</code>. <code>&lt;BrowserRouter&gt;</code> uses the HTML5 History API to manage the URLs, while <code>&lt;HashRouter&gt;</code> uses the hash portion of the URL to store the routing information.</li><li>Route Matcher: The route matcher components are used to match the current URL with a specific component that should be rendered. There are several types of route matcher components available, including <code>&lt;Route&gt;</code>, <code>&lt;Switch&gt;</code>, and <code>&lt;Redirect&gt;</code>. <code>&lt;Route&gt;</code> is used to specify a particular path and the component that should be rendered when the path matches. <code>&lt;Switch&gt;</code> is used to group multiple <code>&lt;Route&gt;</code> components and render only the first one that matches the current URL. <code>&lt;Redirect&gt;</code> is used to redirect the user to a different URL when a certain path is matched.</li><li>Navigation components: The navigation components are used to create links between the different pages of your application. There are several navigation components available, including <code>&lt;Link&gt;</code>, <code>&lt;NavLink&gt;</code>, and <code>&lt;RouterLink&gt;</code>. <code>&lt;Link&gt;</code> is used to create a standard hyperlink that takes the user to a different page. <code>&lt;NavLink&gt;</code> is used to create a hyperlink that is styled differently when the current URL matches the link's path. <code>&lt;RouterLink&gt;</code> is used to create a hyperlink that is aware of the current routing context and can navigate to a different route within your application.</li></ol><p>An example can be found <a href="https://www.w3schools.com/react/react_router.asp" target="_blank" rel="noopener noreferrer">here</a>.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Git Basics]]></title>
            <link>https://lipingpan101.github.io/blog/2023/02/25/git-basics</link>
            <guid>https://lipingpan101.github.io/blog/2023/02/25/git-basics</guid>
            <pubDate>Sat, 25 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Here are some commonly used Git commands:]]></description>
            <content:encoded><![CDATA[<p>Here are some commonly used Git commands:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction-sequence">Introduction Sequence<a href="#introduction-sequence" class="hash-link" aria-label="Direct link to Introduction Sequence" title="Direct link to Introduction Sequence">​</a></h2><ol><li><code>git commit</code>: records changes to the repository </li><li><code>git commit --amend</code>: modifies the last commit </li><li><code>git branch newImage</code>: creates a new branch named newImage </li><li><code>git checkout &lt;name&gt;</code>: switches to an existing branch </li><li><code>git checkout -b [yourbranchname]</code>: creates a new branch and switches to it </li><li><code>git merge bugFix</code>: merges the bugFix branch into the current branch </li><li><code>git rebase main</code>: applies the changes from the current branch on top of the main branch</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="ramping-up">Ramping Up<a href="#ramping-up" class="hash-link" aria-label="Direct link to Ramping Up" title="Direct link to Ramping Up">​</a></h2><ol><li><code>HEAD</code>: the symbolic name for the currently checked out commit </li><li>Detaching <code>HEAD</code>: attaching it to a commit instead of a branch </li><li>Moving upwards one commit at a time with <code>^</code>. Moving upwards a number of times with <code>~&lt;num&gt;</code>, e.g., <code>git checkout HEAD~4</code>. </li><li>Reassigning a branch to a commit with the <code>-f</code> option, e.g., <code>git branch -f main HEAD~3</code>, moves the <code>main</code> branch to three parents behind <code>HEAD</code>. </li><li><code>git reset</code>: moves a branch backwards as if the commit had never been made. Use <code>git revert</code> instead to reverse changes and share those reversed changes with others.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="moving-work-around">Moving Work Around<a href="#moving-work-around" class="hash-link" aria-label="Direct link to Moving Work Around" title="Direct link to Moving Work Around">​</a></h2><ol><li><code>git cherry-pick &lt;commit1&gt; &lt;commit2&gt; &lt;...&gt;</code>: copies a series of commits below your current location (<code>HEAD</code>)</li><li><code>git rebase -i</code>: opens up a UI to show you which commits are about to be copied below the target of the rebase, e.g., <code>git rebase -i HEAD~4</code></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="a-mixed-bag">A Mixed Bag<a href="#a-mixed-bag" class="hash-link" aria-label="Direct link to A Mixed Bag" title="Direct link to A Mixed Bag">​</a></h2><ol><li><code>git tag v1 C1</code>: names the tag <code>v1</code> and references the commit <code>C1</code> explicitly</li><li><code>git describe &lt;ref&gt;</code>: describes the commit referenced by <code>&lt;ref&gt;</code> in the form of <code>&lt;tag&gt;_&lt;numCommits&gt;_g&lt;hash&gt;</code></li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="advanced-topics">Advanced Topics<a href="#advanced-topics" class="hash-link" aria-label="Direct link to Advanced Topics" title="Direct link to Advanced Topics">​</a></h2><ol><li>The <code>^</code> modifier also accepts an optional number after it, which specifies which parent reference to follow from a merge commit.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="push--pull----git-remotes">Push &amp; Pull -- Git Remotes<a href="#push--pull----git-remotes" class="hash-link" aria-label="Direct link to Push &amp; Pull -- Git Remotes" title="Direct link to Push &amp; Pull -- Git Remotes">​</a></h2><ol><li><code>git clone</code>: creates a copy of a remote repository on your local machine.</li><li>Remote branches are on your local repository, not on the remote repository. </li><li>Remote branches have a naming convention in the format of <code>&lt;remote name&gt;/&lt;branch name&gt;</code>, e.g., <code>origin/main</code>. </li><li><code>git fetch</code>: downloads changes from the remote repository but does not integrate them into your local repository. </li><li><code>git pull</code>: downloads changes from the remote repository and integrates them into your local repository. </li><li><code>git fakeTeamwork &lt;branch&gt; &lt;numCommits&gt;</code>: simulates a teammate pushing commits to the <code>&lt;branch&gt;</code> branch on the remote. </li><li><code>git push</code>: uploads changes from your local repository to the remote repository.</li></ol><h2 class="anchor anchorWithStickyNavbar_LWe7" id="to-origin-and-beyond----advanced-git-remotes">To Origin And Beyond -- Advanced git Remotes<a href="#to-origin-and-beyond----advanced-git-remotes" class="hash-link" aria-label="Direct link to To Origin And Beyond -- Advanced git Remotes" title="Direct link to To Origin And Beyond -- Advanced git Remotes">​</a></h2><ol><li><p><code>git checkout -b branchname origin/branchname</code>: creates a new local branch from a remote branch.</p></li><li><p><code>git branch -u origin/main foo</code>: sets the <code>foo</code> branch to track <code>origin/main</code>.</p></li><li><p><code>git push &lt;remote&gt; &lt;place&gt;</code>: pushes the changes in <code>&lt;place&gt;</code> to the specified <code>&lt;remote&gt;</code>.</p></li><li><p><code>git push origin &lt;source&gt;:&lt;destination&gt;</code>: pushes changes from the <code>&lt;source&gt;</code> branch to the <code>&lt;destination&gt;</code> branch on the origin remote.</p></li></ol>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[TDD Benefits for Beginners]]></title>
            <link>https://lipingpan101.github.io/blog/2023/02/23/TDD-benefits</link>
            <guid>https://lipingpan101.github.io/blog/2023/02/23/TDD-benefits</guid>
            <pubDate>Thu, 23 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Test-Driven Development (TDD) is an approach to software development that involves writing tests before writing code. By writing tests first, developers can ensure that their code is working as expected, and they can catch bugs early in the development process. TDD can be especially beneficial for beginners, as it can help them to break down tasks into smaller, more manageable chunks, and to focus on writing clean, maintainable code.]]></description>
            <content:encoded><![CDATA[<p>Test-Driven Development (TDD) is an approach to software development that involves writing tests before writing code. By writing tests first, developers can ensure that their code is working as expected, and they can catch bugs early in the development process. TDD can be especially beneficial for beginners, as it can help them to break down tasks into smaller, more manageable chunks, and to focus on writing clean, maintainable code.</p><p>One of the key benefits of TDD is that it helps developers to write better code by forcing them to think about the functionality of their code before they write it. This is especially important for beginners who may not have as much experience in writing code. When writing tests first, developers must break down the functionality of their code into smaller, testable units, which can help to make the task of writing code more manageable. This process of breaking down tasks into smaller units is known as "tasking", and it's a key part of TDD.</p><p>To illustrate the benefits of TDD, let's look at an example of a React component. Suppose we want to create a registration form for a website that allows users to sign up for an account. Here's how we could use TDD to write this feature:</p><ol><li><p>First, we write a test that checks that the registration form contains all the necessary fields:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'registration form contains required fields'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> getByLabelText </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">RegistrationForm</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">username</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBeInTheDocument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">email</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBeInTheDocument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBeInTheDocument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">confirm password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBeInTheDocument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Next, we write a test that checks that the form cannot be submitted if any of the fields are empty:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'form cannot be submitted if fields are empty'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> getByLabelText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> getByRole </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">RegistrationForm</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByRole</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">username</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toHaveAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'required'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">email</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toHaveAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'required'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toHaveAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'required'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">confirm password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toHaveAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'required'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Then, we write a test that checks that the form cannot be submitted if the passwords don't match:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'form cannot be submitted if passwords do not match'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> getByLabelText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> getByRole </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">RegistrationForm</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> usernameField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">username</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> emailField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">email</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> passwordField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> confirmPasswordField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">confirm password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">usernameField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'testuser'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">emailField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'testuser@example.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">passwordField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">confirmPasswordField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'not the same password'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByRole</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toHaveAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'aria-invalid'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'true'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">confirm password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toHaveAttribute</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'aria-invalid'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'true'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Finally, we write a test that checks that the form can be submitted if all fields are filled out correctly:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">test</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'form can be submitted if all fields are filled out correctly'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> getByLabelText</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> getByRole </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">render</span><span class="token punctuation" style="color:#393A34">(</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token maybe-class-name">RegistrationForm</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> usernameField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">username</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> emailField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">email</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> passwordField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> confirmPasswordField </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">confirm password</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">usernameField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'testuser'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">emailField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'testuser@example.com'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">passwordField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">change</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">confirmPasswordField</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">target</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">value</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'password'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  fireEvent</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">click</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByRole</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'button'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token function" style="color:#d73a49">expect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token function" style="color:#d73a49">getByLabelText</span><span class="token punctuation" style="color:#393A34">(</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-source language-regex" style="color:#36acaa">success message</span><span class="token regex regex-delimiter" style="color:#36acaa">/</span><span class="token regex regex-flags" style="color:#36acaa">i</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toBeInTheDocument</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li><li><p>Once all tests are passing, we can implement the code for the RegistrationForm component:</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">RegistrationForm</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">props</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setFormData</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">username</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">email</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">password</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token literal-property property" style="color:#36acaa">confirmPassword</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">''</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">formError</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setFormError</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">React</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">''</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleChange</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> name</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> value </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">target</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setFormData</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">formData</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token spread operator" style="color:#393A34">...</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">name</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> value</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleSubmit</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">preventDefault</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">password</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">!==</span><span class="token plain"> formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">confirmPassword</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token function" style="color:#d73a49">setFormError</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Passwords do not match'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// Call API to submit registration form data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token comment" style="color:#999988;font-style:italic">// If successful, display success message</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">form onSubmit</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">handleSubmit</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">label htmlFor</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"username"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Username</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">label</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"text"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          id</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"username"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"username"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          value</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">username</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          onChange</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">handleChange</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">label htmlFor</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"email"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Email</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">label</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"email"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          id</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"email"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"email"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          value</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">email</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          onChange</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">handleChange</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">label htmlFor</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"password"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Password</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">label</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"password"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          id</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"password"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"password"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          value</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">password</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          onChange</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">handleChange</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">label htmlFor</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"confirmPassword"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Confirm</span><span class="token plain"> </span><span class="token maybe-class-name">Password</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">label</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">input</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          type</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"password"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          id</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"confirmPassword"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          name</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"confirmPassword"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          value</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">formData</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">confirmPassword</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          onChange</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">handleChange</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          required</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token operator" style="color:#393A34">/</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">formError </span><span class="token operator" style="color:#393A34">&amp;&amp;</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div className</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"error"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">formError</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button type</span><span class="token operator" style="color:#393A34">=</span><span class="token string" style="color:#e3116c">"submit"</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">Submit</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">form</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></li></ol><p>Here, we've implemented a RegistrationForm component that uses the formData state to track the user's input, and the formError state to display an error message if the passwords don't match. The handleChange function updates the formData state whenever the user enters or modifies a value, and the handleSubmit function checks whether the passwords match before submitting the form.</p><p>By using TDD to write this feature, we were able to break down the task of creating a registration form into smaller, testable pieces, and we were able to ensure that each piece of code worked correctly before moving on to the next one. This approach helped us write code that was more modular, more maintainable, and less error-prone, which can be especially helpful for beginners who may not have as much experience with writing code.</p><p>In summary, Test-Driven Development can be a valuable tool for beginners to break down tasks into smaller, testable units, and to focus on writing clean, maintainable code. By using TDD, beginners can ensure that their code is working as expected, catch bugs early in the development process, and ultimately become better developers.</p>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[React Hooks]]></title>
            <link>https://lipingpan101.github.io/blog/2023/02/23/react-hooks</link>
            <guid>https://lipingpan101.github.io/blog/2023/02/23/react-hooks</guid>
            <pubDate>Thu, 23 Feb 2023 00:00:00 GMT</pubDate>
            <description><![CDATA[Introduction]]></description>
            <content:encoded><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="introduction">Introduction<a href="#introduction" class="hash-link" aria-label="Direct link to Introduction" title="Direct link to Introduction">​</a></h2><p>React Hooks were introduced in version 16.8 of React and have become a popular feature among developers. Hooks provide a way to manage state and side effects in functional components, making them more powerful and easier to write. In this article, we'll explore the basics of React Hooks and how to use them to manage state and side effects in your applications.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-are-react-hooks">What are React Hooks?<a href="#what-are-react-hooks" class="hash-link" aria-label="Direct link to What are React Hooks?" title="Direct link to What are React Hooks?">​</a></h2><p>React Hooks are functions that allow you to use state and other React features in functional components. They provide a way to reuse stateful logic between components, without having to create class components or pass props down through many levels of components. There are several built-in hooks that come with React, such as useState and useEffect, and you can also create your own custom hooks.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-usestate-hook">The useState Hook<a href="#the-usestate-hook" class="hash-link" aria-label="Direct link to The useState Hook" title="Direct link to The useState Hook">​</a></h2><p>The useState hook allows you to manage state in functional components. It takes an initial state value and returns an array with the current state value and a function to update that state value. You can use multiple instances of the useState hook to manage different pieces of state in your component.</p><div class="language-javascript codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascript codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useState </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">Counter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setCount</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">handleClick</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setCount</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">count </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">p</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token maybe-class-name">You</span><span class="token plain"> clicked </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">count</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> times</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">p</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain">button onClick</span><span class="token operator" style="color:#393A34">=</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">handleClick</span><span class="token punctuation" style="color:#393A34">}</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">Click</span><span class="token plain"> me</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">button</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token operator" style="color:#393A34">/</span><span class="token plain">div</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this example, we are using the <code>useState</code> hook to manage state in a functional component. We initialize the state with a value of <code>0</code>, and we get back an array with the current state value (<code>count</code>) and a function to update that state value (<code>setCount</code>). When the button is clicked, we call the <code>handleClick</code> function, which updates the state by calling <code>setCount</code> with the new value of <code>count + 1</code>.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-useeffect-hook">The useEffect Hook<a href="#the-useeffect-hook" class="hash-link" aria-label="Direct link to The useEffect Hook" title="Direct link to The useEffect Hook">​</a></h2><p>The useEffect hook allows you to manage side effects in functional components. It takes a function that performs a side effect, such as fetching data or updating the DOM, and an array of dependencies that trigger the effect when they change. You can use multiple instances of the useEffect hook to manage different side effects in your component.</p><div class="language-javas codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javas codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import React, { useState, useEffect } from 'react';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function UserList() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const [users, setUsers] = useState([]);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  useEffect(() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    fetch('https://jsonplaceholder.typicode.com/users')</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      .then(response =&gt; response.json())</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      .then(data =&gt; setUsers(data));</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }, []);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;ul&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      {users.map(user =&gt; (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        &lt;li key={user.id}&gt;{user.name}&lt;/li&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      ))}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;/ul&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this example, we are using the <code>useEffect</code> hook to fetch data from an API and update the state in a functional component. We initialize the state with an empty array, and we use the <code>useEffect</code> hook to perform the fetch operation when the component mounts (i.e., when the array of dependencies is empty). When the fetch operation is complete, we update the state by calling <code>setUsers</code> with the fetched data. Finally, we render the list of users by mapping over the <code>users</code> array.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="custom-hooks">Custom Hooks<a href="#custom-hooks" class="hash-link" aria-label="Direct link to Custom Hooks" title="Direct link to Custom Hooks">​</a></h2><p>Custom hooks are functions that allow you to reuse stateful logic between components. They are a way to extract common functionality into a reusable module, making your code more modular and easier to maintain. Custom hooks can use built-in hooks or other custom hooks, and can take arguments and return values.</p><div class="language-javascrip codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-javascrip codeBlock_bY9V thin-scrollbar"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">import React, { useState, useEffect } from 'react';</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function useCounter(initialCount) {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const [count, setCount] = useState(initialCount);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  useEffect(() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    const intervalId = setInterval(() =&gt; {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      setCount(count =&gt; count + 1);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    }, 1000);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    return () =&gt; clearInterval(intervalId);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  }, []);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return count;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">function Timer() {</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  const count = useCounter(0);</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  return (</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    &lt;p&gt;You have been on this page for {count} seconds.&lt;/p&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  );</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg class="copyButtonIcon_y97N" viewBox="0 0 24 24"><path d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg class="copyButtonSuccessIcon_LjdS" viewBox="0 0 24 24"><path d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div><p>In this example, we are creating a custom hook called <code>useCounter</code> that uses the <code>useState</code> and <code>useEffect</code> hooks to implement a simple counter. The <code>useCounter</code> hook takes an <code>initialCount</code> argument and returns the current count value, which is updated every second using a <code>setInterval</code> function inside the <code>useEffect</code> hook. We then use the <code>useCounter</code> hook inside the <code>Timer</code> component to display the number of seconds the user has been on the page.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="best-practices-for-using-react-hooks">Best Practices for Using React Hooks<a href="#best-practices-for-using-react-hooks" class="hash-link" aria-label="Direct link to Best Practices for Using React Hooks" title="Direct link to Best Practices for Using React Hooks">​</a></h2><p>To get the most out of React Hooks, it's important to follow some best practices. These include using the useState hook to manage local state, using the useEffect hook to manage side effects, and creating custom hooks to reuse stateful logic. It's also important to avoid using hooks inside loops or conditionals, and to use the array destructuring syntax to name your variables.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2><p>React Hooks are a powerful tool for managing state and side effects in your functional components. They allow you to reuse stateful logic between components, making your code more modular and easier to maintain. By following the best practices outlined in this article, you can take advantage of the full power of React Hooks and build better React applications.</p><p>React Hooks provide a way to manage state and side effects in functional components, making them more powerful and easier to write. By using the useState and useEffect hooks, creating custom hooks, and following best practices, you can take advantage of the full power of React Hooks and build better React applications. With this knowledge, you'll be able to take your front-end development skills to the next level and create more efficient and maintainable code.</p>]]></content:encoded>
        </item>
    </channel>
</rss>